name: App Store Approval Monitor

on:
  workflow_call:
    inputs:
      bundle_id:
        description: 'iOS bundle identifier'
        required: true
        type: string
    secrets:
      APPSTORE_KEY_ID:
        required: true
      APPSTORE_ISSUER_ID:
        required: true
      APPSTORE_PRIVATE_KEY_B64:
        required: true
      REDDIT_CLIENT_ID:
        required: true
      REDDIT_SECRET:
        required: true
      REDDIT_USERNAME:
        required: true
      REDDIT_PASSWORD:
        required: true
      GITHUB_TOKEN:
        required: true

jobs:
  check-approval:
    runs-on: ubuntu-latest
    outputs:
      approved: ${{ steps.check.outputs.approved }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Rehydrate private key
        run: |
          echo "${{ secrets.APPSTORE_PRIVATE_KEY_B64 }}" \
            | base64 --decode > AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests PyJWT

      - name: Check App Store approval
        id: check
        run: |
          python scripts/check_app_approval.py \
            --bundle-id "${{ inputs.bundle_id }}" \
            --key-id "${{ secrets.APPSTORE_KEY_ID }}" \
            --issuer-id "${{ secrets.APPSTORE_ISSUER_ID }}" \
            --key-file AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8 \
          | tee status.json
          approved=$(jq -r .approved status.json)
          echo "approved=$approved" >> $GITHUB_OUTPUT

      - name: Upload status artifact
        uses: actions/upload-artifact@v3
        with:
          name: appstore-status
          path: status.json

  deploy-and-announce:
    needs: check-approval
    if: needs.check-approval.outputs.approved == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Generate landing-page content
        run: |
          ./scripts/fetch_app_data.py "${{ inputs.bundle_id }}"

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Build site
        run: hugo --minify -d public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public

      - name: Post to Reddit
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_SECRET: ${{ secrets.REDDIT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          SUBREDDIT: your_app_subreddit
          POST_TITLE: "ðŸŽ‰ ${{ github.repository }} is now live!"
          POST_BODY: |
            Our app (v${{ github.ref_name }}) just went live on the App Store.  
            ðŸ‘‰ Check it out: https://${{ github.repository_owner }}.github.io/${{ github.repository }}
        run: |
          pip install praw
          python <<EOF
          import os
          import praw

          reddit = praw.Reddit(
              client_id=os.environ['REDDIT_CLIENT_ID'],
              client_secret=os.environ['REDDIT_SECRET'],
              username=os.environ['REDDIT_USERNAME'],
              password=os.environ['REDDIT_PASSWORD'],
              user_agent="github-action-post"
          )
          subreddit = os.environ['SUBREDDIT']
          title = os.environ['POST_TITLE']
          body = os.environ['POST_BODY']
          reddit.subreddit(subreddit).submit(title, selftext=body)
          EOF

      - name: Log announcement
        run: echo "Announced at $(date -u +"%Y-%m-%dT%H:%M:%SZ")" > announce.log

      - name: Upload announcement log
        uses: actions/upload-artifact@v3
        with:
          name: announce-log
          path: announce.log
